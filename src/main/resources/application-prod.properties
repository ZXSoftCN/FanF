#Contants
server.port=8080
key=prod

######  db config start  ######
#spring.datasource.url=jdbc:mysql://localhost:3306/mydb?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
#spring.datasource.userName=root
#spring.datasource.password=123456
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
######  db config end ######


##########   使用Drud作为数据源 ###################
Druid.datasource.url=jdbc:mysql://localhost:3306/fanfanfamilydb?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
Druid.datasource.userName=root
Druid.datasource.password=123456
Druid.datasource.driver-class-name=com.mysql.jdbc.Driver
##DBCP连接池是否缓存PreparedStatements，会造成相同逻辑的SQL重用游标，而发生：maximum open cursors exceeded异常
Druid.datasource.dbcp2.pool-prepared-statements=false
#Add
Druid.tomcat.initial-size=2
Druid.tomcat.max-active=20
Druid.tomcat.min-idle=0
Druid.tomcat.max-wait=60000
Druid.tomcat.validation-query=SELECT 1
Druid.tomcat.test-on-borrow=false
Druid.tomcat.test-while-idle=true

######  data config start ######
spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql =true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
######   data config end ######


###User Controller

###SSL
#server.ssl.key-store=classpath:client1.p12
#server.ssl.key-store-password=123456
#server.ssl.key-store-type=PKCS12
#server.ssl.key-alias=ZXSoft
#server.ssl.ciphers= # Supported SSL ciphers.
#server.ssl.client-auth= # Whether client authentication is wanted ("want") or needed ("need"). Requires a trust store.
#server.ssl.enabled= # Enable SSL support.
#server.ssl.enabled-protocols= # Enabled SSL protocols.
#server.ssl.key-alias= # Alias that identifies the key in the key store.
#server.ssl.key-password= # Password used to access the key in the key store.
#server.ssl.key-store= # Path to the key store that holds the SSL certificate (typically a jks file).
#server.ssl.key-store-password= # Password used to access the key store.
#server.ssl.key-store-provider= # Provider for the key store.
#server.ssl.key-store-type= # Type of the key store.
#server.ssl.protocol=TLS # SSL protocol to use.
#server.ssl.trust-store= # Trust store that holds SSL certificates.
#server.ssl.trust-store-password= # Password used to access the trust store.
#server.ssl.trust-store-provider= # Provider for the trust store.
#server.ssl.trust-store-type= # Type of the trust store.